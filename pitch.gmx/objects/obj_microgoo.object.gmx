<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_microgoo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>movespeed=0.3+0.3*global.difficulty;
if (global.difficulty==2)
    movespeed*=0.25;
else if (global.difficulty==3)
    movespeed*=0.5;
if (movespeed&gt;8)
    movespeed=8;
intensity=1+global.difficulty/2;
if (intensity&gt;4)
    intensity=4;
hp=4;
points=40;
hurtpitch=1;
if (global.difficulty==32)
    movespeed=2.5;
gibs=14;

killtype=0;
killdir=0;
nopoints=0;
enemytype=88;
invincible=1;
wait=40;
microboss=1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//HITFLASH
if (hitflash&gt;0)
    hitflash-=1;

//DIE
if (hp&lt;=0){
    global.stats[0]+=1;
    if (!nopoints){
        global.points+=points*global.multiplier;
        if (global.showscore)
            (instance_create(x,y-4,obj_scorenumber)).points=points*global.multiplier;
        }
    scr_randnuke();
    //CANNON
    if (killtype==1){
        scr_explo1();
        instance_destroy();
        instance_create(x,y,obj_elfexplo);
        if (global.shakescreen&lt;4)
            global.shakescreen+=2;
        if (!nopoints){
            repeat(gibs)
                instance_create(x,y,obj_googib);
            }
        }
    //ICE
    else if (killtype==2){
        instance_destroy();
        if (global.shakescreen&lt;4)
            global.shakescreen+=2;
        instance_create(x,y,obj_iceflash);
        repeat(8){
            tempid=instance_create(x,y,obj_icegib);
            tempid.direction=killdir-45+random(90);
            }
        for (i=0;i&lt;4;i+=1){
            tempid=instance_create(x,y,obj_icepuff);
                tempid.direction=i*90+45;
                tempid.speed=7;
            }
        if (megaice || random(1)&lt;0.1){   //Power ice
            scr_icekillbig();
            scr_megaicefx();
            repeat(gibs)
                (instance_create(x,y,obj_googib)).sprite_index=spr_googib2;
            }
        else
            scr_icekill();
        }
    //LASER
    else if (killtype==3){
        scr_rainbowkill();
        instance_destroy();
        global.flash=1;
        if (global.bake[4]==0)
            scr_lxkill(spr_lx_microgoov,spr_lx_microgooh,17);
        else{
            for (i=0;i&lt;7;i+=1){
                tempid=instance_create(x,y,obj_laserexplo);
                tempid.img4=i;
                tempid.speed=(-6+i*2)*3;
                tempid.direction=killdir+90;
                tempid.image_single=tempid.img4*9;
                if (hyperlaser){
                    tempid.sprite_index=spr_hyperlaserexplo;
                    tempid.image_single=0;
                    }
                }
            }
        }
    //NUKE
    if (killtype==4){
        instance_destroy();
        instance_create(x,y,obj_elfexplo);
        if (global.shakescreen&lt;4)
            global.shakescreen+=2;
        repeat(gibs){
            tempid=instance_create(x,y,obj_googib);
            tempid.vspeed*=2;
            }
        }
    }

//APPEAR
if (wait&gt;0){
    wait-=1;
    if (wait==0){
        invincible=0;
        zspeed=2;
        zgrav=-0.2;
        repeat(gibs)
            (instance_create(x,y+5,obj_googib)).speed*=0.5;
        if (!global.nosound){
            sound_stop(snd_hifive);
            sound_play(snd_hifive);
            }
        }
    }
zspeed+=zgrav;
z+=zspeed;
if (z+zspeed+zgrav&lt;=0){
    z=0;
    zspeed=0;
    zgrav=0;
    }

//MOVE
depth=320-y+obj_sabot.y;
if (z==0 &amp;&amp; wait&lt;=0){
    if (speed&lt;movespeed)
        speed+=0.007;
    if (global.difficulty==32)
        speed+=0.1;
    movecyc-=1;
    curdir=direction;
    if (movecyc&lt;=0){
        movecyc=15;
        newdirection=point_direction(x,y,obj_pitch.x,obj_pitch.y)-45+random(90);
        }
    if ((newdirection-curdir)&lt;-180)
        curdir-=360;
    else if ((newdirection-curdir)&gt;180)
        curdir+=360;
    if ((newdirection-curdir)&gt;intensity)
        direction=curdir+intensity;
    else if ((newdirection-curdir)&lt;-intensity)
        direction=curdir-intensity;
    }
if (speed&gt;movespeed)
    speed=movespeed;

//ANIMATE
imgcyc+=1;
if (imgcyc==2){
    imgcyc=0;
    img+=1;
    if (img==4)
        img=0;
    }
image_single=img;

if (x&lt;obj_sabot.x-8 || x&gt;obj_sabot.x+328 || y&lt;obj_sabot.y-8 || y&gt;obj_sabot.y+248)
    instance_destroy();</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_bounce_solid(0);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!invincible){
    draw_sprite(sprite_index,image_single,x,y-z);
    if (hitflash&gt;0)
        draw_sprite(sprite_index,image_single+4,x,y-z);
    }</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
