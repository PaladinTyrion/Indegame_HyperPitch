<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_presentelf</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp=1;
points=1000;
hurtpitch=0;

z=0;
zspeed=0;
zgrav=0;

image_single=0;
depth=320-y+obj_sabot.y;
killtype=0;
killdir=0;
nopoints=0;
enemytype=15;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//DIE
if (hp&lt;=0 &amp;&amp; !marked){
    global.stats[0]+=1;
    if (!nopoints){
        global.points+=points*global.multiplier;
        if (global.showscore)
            (instance_create(x,y-4,obj_scorenumber)).points=points*global.multiplier;
        instance_create(x-8,y-8,obj_pickup);
        instance_create(x+8,y+8,obj_pickup);
        instance_create(x-8,y+8,obj_pickup);
        instance_create(x+8,y-8,obj_pickup);
        }
    scr_randnuke(0);
    //CANNON
    if (killtype==1){
        scr_explo1();
        instance_destroy();
        instance_create(x,y-6,obj_elfexplo);
        if (global.shakescreen&lt;4)
            global.shakescreen+=2;
        if (!nopoints){
            repeat(3){
                tempid=instance_create(x,y,obj_elfgib);
                tempid.type=7;
                tempid.direction=killdir-22.5+random(45);
                tempid.vspeed*=0.85;
                }
            }
        }
    //ICE
    else if (killtype==2){
        instance_destroy();
        if (global.shakescreen&lt;4)
            global.shakescreen+=2;
        instance_create(x,y,obj_iceflash);
        repeat(8){
            tempid=instance_create(x,y,obj_icegib);
            tempid.direction=killdir-45+random(90);
            }
        for (i=0;i&lt;4;i+=1){
            tempid=instance_create(x,y,obj_icepuff);
                tempid.direction=i*90+45;
                tempid.speed=7;
            }
        if (megaice || random(1)&lt;0.1){   //Power ice
            scr_icekillbig();
            scr_megaicefx(0);
            repeat(3){
                tempid=instance_create(x,y,obj_elfgib);
                tempid.type=15;
                tempid.direction=random(360);
                tempid.speed=0.3+random(0.8);
                tempid.vspeed*=0.85;
                tempid.zspeed=random(5)+3;
                }
            }
        else
            scr_icekill();
        }
    //LASER
    else if (killtype==3){
        scr_rainbowkill();
        instance_destroy();
        global.flash=1;
        if (global.bake[4]==0)
            scr_lxkill(spr_lx_presentelfv,spr_lx_presentelfh,15);
        else{
            for (i=0;i&lt;7;i+=1){
                tempid=instance_create(x,y,obj_laserexplo);
                tempid.img4=i;
                tempid.speed=(-6+i*2)*3;
                tempid.direction=killdir+90;
                tempid.image_single=tempid.img4*9;
                if (hyperlaser){
                    tempid.sprite_index=spr_hyperlaserexplo;
                    tempid.image_single=0;
                    }
                }
            }
        }
    //NUKE
    if (killtype==4){
        instance_destroy();
        instance_create(x,y-6,obj_elfexplo);
        if (global.shakescreen&lt;4)
            global.shakescreen+=2;
            repeat(3){
                tempid=instance_create(x,y,obj_elfgib);
                tempid.type=7;
                tempid.direction=random(360);
                tempid.speed=0.1+random(1.8);
                tempid.vspeed*=0.85;
                tempid.zspeed=random(6)+3;
            }
        }
    }

//Idle
if (state==0){
    cyc+=1;
    if (cyc==4){
        cyc=0;
        image_single+=1;
        if (image_single==4)
            image_single=0;
        }
    //if (obj_pitch.firing || point_distance(x,y,obj_pitch.x,obj_pitch.y)&lt;32){
    if (obj_pitch.firing){
        cyc=2;
        image_single=4;
        zspeed=-2;
        zgrav=0.3;
        state=1;
        }
    }
//Surprised
else if (state==1){
    cyc+=1;
    if (cyc==3)
        image_single=4;
    else if (cyc==6)
        image_single=5;
    else if (cyc==9)
        image_single=6;
    else if (cyc==12){
        image_single=5;
        cyc=0;
        }
    if (z&gt;0.1){
        instance_destroy();
        marked=1;
        if (hp&gt;0)
            instance_create(x,y,obj_presentelf2);
        }
    }

//Autodie
if (point_distance(x,y,obj_pitch.x,obj_pitch.y)&lt;12 &amp;&amp; obj_pitch.z==0){
    hp=0;
    killtype=1;
    killdir=0;
    }

//Z
zspeed+=zgrav;
z+=zspeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_single,x,y+z);</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
