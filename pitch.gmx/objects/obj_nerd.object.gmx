<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_nerd</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>frail=1; //shots pass through, damaging the shot
movespeed=0.25+0.25*global.difficulty;
if (movespeed&gt;1.85)
    movespeed=1.85;
hp=0.5;
points=10;
hurtpitch=1;
barrel=0;

killtype=0;
killdir=0;
nopoints=0;
enemytype=16;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//JUMP INTO AIR
if (obj_pitch.camping==1 &amp;&amp; global.difficulty&gt;=3){
    prevdist=dist;
    dist=point_distance(x,y,obj_pitch.x,obj_pitch.y);
    if (random(1)&lt;0.04 &amp;&amp; z==0 &amp;&amp; dist&lt;prevdist){
        if (point_distance(x,y,obj_pitch.x,obj_pitch.y)&lt;64){
            zspeed=4;
            zgrav=-0.2;
            z=0.1;
            invincible=1;
            image_single=image_single;
            if (!global.nosound){
                sound_stop(snd_jump);
                sound_play(snd_jump);
                }
            }
        }
    }
zspeed+=zgrav;
z+=zspeed;
if (zspeed&lt;0 &amp;&amp; z+zspeed+zgrav&lt;=4)
    invincible=0;
if (zspeed&lt;0 &amp;&amp; z+zspeed+zgrav&lt;=0){
    invincible=0;
    z=0;
    zspeed=0;
    zgrav=0;
    }

//DIE
if (hp&lt;=0){
    global.stats[0]+=1;
    if (!nopoints){
        global.points+=points*global.multiplier;
        if (global.showscore)
            (instance_create(x,y-4,obj_scorenumber)).points=points*global.multiplier;
        if (random(1)&lt;global.pickupchance)
            instance_create(x,y,obj_pickup);
        }
    scr_randnuke(0);
    //CANNON
    if (killtype==1){
        scr_explo1();
        instance_destroy();
        instance_create(x,y,obj_elfexplo);
        if (global.shakescreen&lt;4)
            global.shakescreen+=2;
        if (!nopoints){
            tempid=instance_create(x,y,obj_elfgib);
                tempid.type=16;
                tempid.direction=killdir-22.5+random(45);
                tempid.vspeed*=0.85;
            tempid=instance_create(x,y,obj_elfgib);
                tempid.type=17;
                tempid.direction=killdir-22.5+random(45);
                tempid.vspeed*=0.85;
            repeat(3){
                tempid=instance_create(x,y,obj_elfgib);
                    tempid.type=18;
                    tempid.direction=killdir-22.5+random(45);
                    tempid.vspeed*=0.85;
                }
            }
        }
    //ICE
    else if (killtype==2){
        instance_destroy();
        if (global.shakescreen&lt;4)
            global.shakescreen+=2;
        instance_create(x,y,obj_iceflash);
        repeat(8){
            tempid=instance_create(x,y,obj_icegib);
            tempid.direction=killdir-45+random(90);
            }
        for (i=0;i&lt;4;i+=1){
            tempid=instance_create(x,y,obj_icepuff);
                tempid.direction=i*90+45;
                tempid.speed=7;
            }
        if (megaice || random(1)&lt;0.1){   //Power ice
            scr_icekillbig();
            scr_megaicefx(0);
            tempid=instance_create(x,y,obj_elfgib);
                tempid.type=19;
                tempid.direction=random(360);
                tempid.speed=0.3+random(0.8);
                tempid.vspeed*=0.85;
                tempid.zspeed=random(5)+3;
            tempid=instance_create(x,y,obj_elfgib);
                tempid.type=20;
                tempid.direction=random(360);
                tempid.speed=0.3+random(0.8);
                tempid.vspeed*=0.85;
                tempid.zspeed=random(5)+3;
            repeat(3){
                tempid=instance_create(x,y,obj_elfgib);
                    tempid.type=21;
                    tempid.direction=random(360);
                    tempid.speed=0.3+random(0.8);
                    tempid.vspeed*=0.85;
                    tempid.zspeed=random(5)+3;
                }
            }
        else
            scr_icekill();
        }
    //LASER
    else if (killtype==3){
        scr_rainbowkill();
        instance_destroy();
        global.flash=1;
        if (global.bake[4]==0)
            scr_lxkill(spr_lx_nerdv,spr_lx_nerdh,15);
        else{
            for (i=0;i&lt;7;i+=1){
                tempid=instance_create(x,y,obj_laserexplo);
                tempid.img4=i;
                tempid.speed=(-6+i*2)*3;
                tempid.direction=killdir+90;
                tempid.image_single=tempid.img4*9;
                if (hyperlaser){
                    tempid.sprite_index=spr_hyperlaserexplo;
                    tempid.image_single=0;
                    }
                }
            }
        }
    //NUKE
    if (killtype==4){
        instance_destroy();
        instance_create(x,y,obj_elfexplo);
        if (global.shakescreen&lt;4)
            global.shakescreen+=2;
        tempid=instance_create(x,y,obj_elfgib);
            tempid.type=16;
            tempid.direction=random(360);
            tempid.speed=0.1+random(1.8);
            tempid.vspeed*=0.85;
            tempid.zspeed=random(6)+3;
        tempid=instance_create(x,y,obj_elfgib);
            tempid.type=17;
            tempid.direction=random(360);
            tempid.speed=0.1+random(1.8);
            tempid.vspeed*=0.85;
            tempid.zspeed=random(6)+3;
        repeat(3){
            tempid=instance_create(x,y,obj_elfgib);
                tempid.type=18;
                tempid.direction=random(360);
                tempid.speed=0.1+random(1.8);
                tempid.vspeed*=0.85;
                tempid.zspeed=random(6)+3;
            }
        }
    }

//MOVE
if (z&lt;4){
    depth=320-y+obj_sabot.y;
    targetcyc-=1;
    if (targetcyc&lt;=0){
        targetcyc=30;
        targetx=-64+random(128);
        targety=-64+random(128);
        if (point_distance(x,y,obj_pitch.x,obj_pitch.y)&gt;64){
            targetx*=2;
            targety*=2;
            }
        if (x&lt;obj_pitch.x)
            dir=0;
        else
            dir=1;
        }
    motion_add(point_direction(x,y,obj_pitch.x+targetx,obj_pitch.y+targety),movespeed*0.04);
    }

//ANIMATE
if (speed&gt;movespeed)
    speed=movespeed;
if (z==0){
    if (img==0)
        img=1;
    else{
        img=0;
        img2+=1;
        }
    if (img2&gt;=4)
        img2=0;
    image_single=img2+dir*32+type*4;
    }

if (x&lt;obj_sabot.x-8 || x&gt;obj_sabot.x+328 || y&lt;obj_sabot.y-8 || y&gt;obj_sabot.y+248)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//move_contact_solid(direction,movespeed);
if (z==0){
    move_bounce_solid(0);
    if (speed&gt;movespeed*0.85)
        speed=movespeed*0.85;
    }
else{
    move_contact_solid(direction,speed);
    if (!place_free(x,y+2) || !place_free(x,y-2))
        vspeed=0;
    if (!place_free(x+2,y) || !place_free(x-2,y))
        hspeed=0;
    }</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_single,x,y-z*2);</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
