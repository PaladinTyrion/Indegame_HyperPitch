<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_merrydoom</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
movespeed=0.4+0.4*global.difficulty;
if (movespeed&gt;3)
    movespeed=3;
if (global.difficulty==2)
    movespeed=0.4;
else if (global.difficulty==3)
    movespeed=0.8;
speedtic=0.02+0.01*((global.difficulty*global.difficulty)/4);
if (speedtic&gt;0.1)
    speedtic=0.1;
hp=48;
points=777;
hurtpitch=4;

invincible=0;

killtype=0;
killdir=0;
nopoints=0;
enemytype=14;
direction=point_direction(x,y,obj_pitch.x,obj_pitch.y)-20+random(40);

boss=0;
microboss=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//HITFLASH
if (hitflash&gt;0)
    hitflash-=1;

//DIE
if (hp&lt;=0){
    global.stats[0]+=1;
    if (!nopoints){
        global.points+=points*global.multiplier;
        if (global.showscore)
            (instance_create(x,y-4,obj_scorenumber)).points=points*global.multiplier;
        instance_create(x,y,obj_pickup);
        }
    scr_randnuke(0);
    //CANNON
    if (killtype==1){
        scr_explo2();
        instance_destroy();
        instance_create(x,y-4,obj_bigexplo);
        if (global.shakescreen&lt;6)
            global.shakescreen+=4;
        if (!nopoints){
            tempid=instance_create(x,y,obj_elfgib);
            tempid.type=floor(random(2));
            tempid.direction=killdir-22.5+random(45);
            tempid.vspeed*=0.85;
            }
        }
    //ICE
    else if (killtype==2){
        instance_destroy();
        if (global.shakescreen&lt;6)
            global.shakescreen+=4;
        instance_create(x,y,obj_iceflash);
        repeat(8){
            tempid=instance_create(x,y,obj_icegib);
            tempid.direction=killdir-45+random(90);
            }
        for (i=0;i&lt;4;i+=1){
            tempid=instance_create(x,y,obj_icepuff);
                tempid.direction=i*90+45;
                tempid.speed=7;
            }
        if (megaice || random(1)&lt;0.1){   //Power ice
            scr_icekillbig();
            scr_megaicefx(0);
            tempid=instance_create(x,y,obj_elfgib);
            tempid.type=8+floor(random(2));
            tempid.direction=random(360);
            tempid.speed=0.3+random(0.8);
            tempid.vspeed*=0.85;
            tempid.zspeed=random(5)+3;
            }
        else
            scr_icekill();
        }
    //LASER
    else if (killtype==3){
        scr_rainbowkill();
        instance_destroy();
        global.flash=1;
        if (global.bake[4]==0){
            if (dir==0)
                scr_lxkill(spr_lx_merrydoom1v,spr_lx_merrydoom1h,17);
            else
                scr_lxkill(spr_lx_merrydoom2v,spr_lx_merrydoom2h,17);
            }
        else{
            for (i=0;i&lt;7;i+=1){
                tempid=instance_create(x,y,obj_laserexplo);
                tempid.img4=i;
                tempid.speed=(-6+i*2)*3;
                tempid.direction=killdir+90;
                tempid.image_single=tempid.img4*9;
                if (hyperlaser){
                    tempid.sprite_index=spr_hyperlaserexplo;
                    tempid.image_single=0;
                    }
                }
            }
        }
    //NUKE
    if (killtype==4){
        instance_destroy();
        instance_create(x,y-4,obj_bigexplo);
        if (global.shakescreen&lt;6)
            global.shakescreen+=4;
        tempid=instance_create(x,y,obj_elfgib);
        tempid.type=floor(random(2));
        tempid.direction=random(360);
        tempid.speed=0.1+random(1.8);
        tempid.vspeed*=0.85;
        tempid.zspeed=random(6)+3;
        }
    }

//MOVE
depth=318-y+obj_sabot.y;
if (move==0){
    speed+=speedtic;
    if (speed&gt;=movespeed){
        move=1;
        speed=movespeed;
        }
    }
else if (move==1){
    speed-=speedtic;
    if (speed&lt;=0){
        move=0;
        speed=0;
        direction=point_direction(x,y,obj_pitch.x,obj_pitch.y)-20+random(40);
        }
    }
if (x&lt;obj_sabot.x+16)
    x=obj_sabot.x+16;
else if (x&gt;obj_sabot.x+304)
    x=obj_sabot.x+304;
if (y&lt;obj_sabot.y+16)
    y=obj_sabot.y+16;
else if (y&gt;obj_sabot.y+208)
    y=obj_sabot.y+208;


//ANIMATE
//Change direction
if (x&gt;obj_pitch.x &amp;&amp; !rot){
    if (dir==1){
        rot=1;
        rotcyc=4;
        }
    dir=0;
    }
else if (x&lt;obj_pitch.x &amp;&amp; !rot){
    if (dir==0){
        rot=1;
        rotcyc=0;
        }
    dir=1;
    }
//Rotate
if (rot){
    if (dir==1){
        rotcyc+=1;
        if (rotcyc==5){
            rotcyc=0;
            rot=0;
            }
        }
    else if (dir==0){
        rotcyc-=1;
        if (rotcyc==-1){
            rotcyc=0;
            rot=0;
            }
        }
    }
//Flash
imgwait-=1;
if (imgwait&lt;=0){
    imgwait=80+random(120);
    flash=1;
    }
if (flash){
    img+=1;
    if (img==5){
        img=0;
        flash=0;
        }
    }
if (rot)
    image_single=10+rotcyc;
else
    image_single=img+dir*5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_single,x,y);
if (hitflash&gt;0)
    draw_sprite(sprite_index,image_single+15,x,y);</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
