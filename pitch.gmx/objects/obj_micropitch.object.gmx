<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_micropitch</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!obj_sabot.oncemicropitch){
    obj_sabot.oncemicropitch=1;
    invincible=1;
if (global.shakescreen&lt;8)
    global.shakescreen+=6;
if (point_distance(x,y,obj_pitch.x,obj_pitch.y)&lt;64){
    x=obj_gotrainup.x;
    y=obj_gotrainup.y;
    }
    tempid=instance_create(x,y,obj_lava);
    tempid.sprite_index=spr_floorbust;
    tempid.depth=999999;
    tempid.nopart=1;
    instance_create(x,y,obj_pitchblock);
    (instance_create(x+8,y+6,obj_hurtexplo)).hurt=1;
    x+=8;
    y+=2;
    repeat(10){
        tempid=instance_create(x,y+5,obj_elfgib);
        tempid.sprite_index=spr_bulbgibs;
        tempid.type=8;
        tempid.speed=random(2.5);
        tempid.direction=random(360);
        tempid.vspeed*=0.85;
        tempid.zspeed=random(7)+1;
        }
    if (!global.nosound){
        sound_play(snd_hitmoon);
        scr_explo2();
        }
    }

movespeed=0.26*global.difficulty;
if (movespeed&gt;5)
    movespeed=5;
bulletspeed=1.0+0.25*global.difficulty;
hpmax=80;
hp=hpmax;
points=2000;
hurtpitch=2;
firemax=80-global.difficulty*10;
if (firemax&lt;=0)
    firemax=0;

killtype=0;
killdir=0;
nopoints=0;
enemytype=90;
microboss=1;

zspeed=5;
zgrav=-0.2;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//SPEAK1
if (speakcyc&lt;40)
    speakcyc+=1;
if (speakcyc==20 &amp;&amp; !global.nosound)
    sound_play(snd_mechapitch1);
//SPEAK2
if (hp&lt;=hpmax/2 &amp;&amp; !speak2 &amp;&amp; !global.nosound){
    speak2=1;
    sound_stop(snd_mechapitch1);
    sound_play(snd_mechapitch2);
    }

//HITFLASH
if (hitflash&gt;0)
    hitflash-=1;

//DIE
if (hp&lt;=0){
    global.stats[0]+=1;
    sound_stop(snd_mechapitch1);
    sound_stop(snd_mechapitch2);
    sound_stop(snd_mechapitch3);
    if (!nopoints){
        global.points+=points*global.multiplier;
        if (global.showscore)
            (instance_create(x,y-4,obj_scorenumber)).points=points*global.multiplier;
        instance_create(x,y,obj_pickup);
        }
    if (killtype==3 &amp;&amp; global.bake[4]==0)
        scr_randnuke(1);
    //CANNON
    if (killtype==1){
        killtype=4;
        }
    //ICE
    else if (killtype==2){
        instance_destroy();
        if (global.shakescreen&lt;6)
            global.shakescreen+=4;
        instance_create(x,y,obj_iceflash);
        repeat(8){
            tempid=instance_create(x,y,obj_icegib);
            tempid.direction=killdir-45+random(90);
            }
        for (i=0;i&lt;8;i+=1){
            tempid=instance_create(x,y,obj_icepuff);
                tempid.direction=i*45;
                tempid.speed=7;
            }
        scr_icekillbig();
        scr_megaicefx(0);
        repeat(20){
            tempid=instance_create(x,y,obj_elfgib);
            tempid.type=15;
            tempid.direction=random(360);
            tempid.speed=0.3+random(0.8);
            tempid.vspeed*=0.85;
            tempid.zspeed=random(5)+3;
            tempid=instance_create(x,y,obj_elfgib);
            tempid.sprite_index=spr_bulbgibs;
            tempid.type=4;
            tempid.direction=random(360);
            tempid.speed=0.5+random(1.2);
            tempid.vspeed*=0.85;
            tempid.zspeed=random(5)+3;
            }
        }
    //LASER
    else if (killtype==3){
        scr_rainbowkill();
        instance_destroy();
        global.flash=1;
        for (i=0;i&lt;7;i+=1){
            tempid=instance_create(x-1,y-5,obj_laserexplo);
            tempid.img4=i;
            tempid.speed=(-6+i*2)*3;
            tempid.direction=killdir+90;
            tempid.image_single=tempid.img4*9;
            if (hyperlaser){
                tempid.sprite_index=spr_hyperlaserexplo;
                tempid.image_single=0;
                }
            tempid=instance_create(x-1,y-5,obj_laserexplo);
            tempid.img4=i;
            tempid.speed=16;
            tempid.direction=i*51.42;
            tempid.vspeed*=0.75;
            tempid.image_single=tempid.img4*9;
            if (hyperlaser){
                tempid.sprite_index=spr_hyperlaserexplo;
                tempid.image_single=0;
                }
            }
        }
    //NUKE
    if (killtype==4){
        scr_explo2();
        instance_destroy();
        instance_create(x,y,obj_bigexplo);
        (instance_create(x,y,obj_hurtexplo)).hurt=1;
        if (global.shakescreen&lt;8)
            global.shakescreen+=6;
        repeat(20){
            tempid=instance_create(x,y,obj_elfgib);
            tempid.type=7;
            tempid.direction=random(360);
            tempid.speed=0.1+random(2.8);
            tempid.vspeed*=0.85;
            tempid.zspeed=random(6)+3;
            tempid=instance_create(x,y,obj_elfgib);
            tempid.sprite_index=spr_bulbgibs;
            tempid.type=6;
            tempid.direction=random(360);
            tempid.speed=0.5+random(1.2);
            tempid.vspeed*=0.85;
            tempid.zspeed=random(5)+3;
            }
        }
    }

//MOVE
depth=314-y+obj_sabot.y;
zspeed+=zgrav;
z+=zspeed;
if (z+zspeed+zgrav&lt;=4 &amp;&amp; invincible)
    invincible=0;
if (z+zspeed+zgrav&lt;=0 &amp;&amp; !landed){
    landed=1;
    z=0;
    zspeed=0;
    zgrav=0;
    direction=floor(random(360));
    }
if (z==0){
    speed+=movespeed/40;
    if (speed&gt;=movespeed)
        speed=movespeed;
    dircyc+=1;
    if (dircyc==20){
        dircyc=0;
        direction+=-45+random(90);
        }
    }

//ANIMATE
if (speed&gt;movespeed)
    speed=movespeed;
imgcyc=1-imgcyc;
if (imgcyc==0)
    img+=1;
if (img==8)
    img=0;
image_single=img;
if (x&lt;obj_sabot.x-8 || x&gt;obj_sabot.x+328 || y&lt;obj_sabot.y-8 || y&gt;obj_sabot.y+248)
    instance_destroy();

//FIRE
if (z==0){
    firecyc+=1;
    if (firecyc==80)
        firecyc=0;
    if (firecyc&gt;=firemax &amp;&amp; (global.difficulty&gt;2 || firecyc mod 2 ==0)){
        firedir=image_single*45+imgcyc*22.5;
        xoff=cos(degtorad(firedir))*8;
        yoff=sin(degtorad(firedir))*8;
        if (firecyc mod 8==0)
            tempid=instance_create(x+xoff,y-7-yoff,obj_enemybullet6);
        else
            tempid=instance_create(x+xoff,y-7-yoff,obj_enemybullet2);
        tempid.speed=bulletspeed;
        tempid.direction=firedir;
        if (!global.nosound &amp;&amp; firecyc mod 4==0){
            sound_stop(snd_enemyfire1);
            sound_play(snd_enemyfire1);
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.barrel)
    other.hp=0;
move_bounce_solid(0);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_single,x,y-z);
if (hitflash&gt;0)
    draw_sprite(sprite_index,image_single+8,x,y-z);</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
