<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_atomicelf</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_boss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>boss=1; //Prevents from taking damage from respawning Pitch
realboss=1; //This is the boss itself
maxhp=300;
if (global.difficulty==2)
    maxhp*=0.5;
hp=maxhp;
enemytype=103;
image_single=0;
depth=310-y+obj_sabot.y;
hurtpitch=2;
drawpunch=2; //0=none, 1=halfway, 2=up
maxpunches=global.difficulty;
if (maxpunches&gt;8)
    maxpunches=8;

points=5000;

scr_removepowerup();</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Spawn bulbs
if (hp&gt;0){
    scr_explo2();
    for (i=0;i&lt;12;i+=1){
        tempid=instance_create(x+cos(degtorad(i*30))*20,y+14+sin(degtorad(i*30))*10,obj_atomicbulb);
        tempid.depth=320-y+obj_sabot.y;
        tempid.degoff=i*30;
        instance_create(x+cos(degtorad(i*30))*20,y+14+sin(degtorad(i*30))*10,obj_elfexplo);
        if (global.shakescreen&lt;8)
            global.shakescreen+=6;
        }
    }</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//HITFLASH
if (hitflash&gt;0)
    hitflash-=1;

if (hp&lt;=0){
    //DESPERATION
    if (global.difficulty&gt;=8 &amp;&amp; !desperation){
        desperation=1;
        warning=0;
        if (global.difficulty==32)
            despfiremod=1;
        obj_sabot.desperation=1;
        hp=maxhp/2;
        global.shakescreen=20;
        with (obj_atomicpunch)
            instance_destroy();
        with (obj_s_atomicturret)
            instance_destroy();
        with (obj_atomicturret){
            instance_destroy();
            (instance_create(x,y-z,obj_hurtexplo)).hurt=1;
            }
        with (obj_megaturret){
            hp=0;
            killtype=1;
            killdir=random(360);
            }
        with (obj_atomicbulb){
            instance_destroy();
            instance_create(x,y,obj_elfexplo);
            }
        with (obj_enemybullet){
            instance_destroy();
            instance_create(x,y,obj_elfexplo);
            }
        instance_create(obj_sabot.x,obj_sabot.y,obj_whiteflash);
        if (!global.nosound)
            sound_play(snd_explo4);
        image_single=3;
        for (i=0;i&lt;20;i+=1){
            tempid=instance_create(x,y-finalyoff,obj_bigexplo);
            tempid.speed=6;
            tempid.direction=i*18;
            tempid.vspeed*=0.7;
            tempid.depth-=30;
            }
        repeat(5){
            tempid=instance_create(x-32+random(64),y-25+random(50),obj_hurtexplo);
            tempid.spawndepth=-30;
            tempid.hurt=1;
            }
        repeat(32){
            tempid=instance_create(x-32+random(64),y-12+random(24),obj_elfgib);
            tempid.type=7;
            tempid.direction=random(360);
            tempid.speed=1+random(3);
            tempid.vspeed*=0.85;
            tempid.zspeed=random(6)+3;
            }
        }
    
    //DEATH
    else{
        global.stats[0]+=1;
        with (obj_atomicpunch)
            instance_destroy();
        with (obj_s_atomicturret)
            instance_destroy();
        with (obj_atomicturret){
            instance_destroy();
            (instance_create(x,y-z,obj_hurtexplo)).hurt=1;
            }
        with (obj_megaturret){
            hp=0;
            killtype=1;
            killdir=random(360);
            }
        with (obj_atomicbulb){
            instance_destroy();
            instance_create(x,y,obj_elfexplo);
            }
        global.points+=points*global.multiplier;
        if (global.showscore){
            tempid=instance_create(x,y-16,obj_scorenumber);
            tempid.points=points*global.multiplier;
            tempid.zgrav/=4;
            tempid.slow=4;
            }
        instance_destroy();
        obj_sabot.bosspresent=0;
        instance_create(x,y,obj_atomicelf2);
        global.shakescreen=20;
        with (obj_enemybullet){
            instance_destroy();
            instance_create(x,y,obj_elfexplo);
            }
        }
    }

//DESPERATION ATTACK
if (desperation &amp;&amp; hp&gt;0){
    image_single=3;
    //SMOKE
    instance_create(x-16+random(32),y-16+random(32),obj_smoke);
    //FIRE
    if (despcyc&lt;100)
        despcyc+=1;
    if (despcyc==40 &amp;&amp; !global.nosound)
        sound_play(snd_enemychargesmall);
    if (despcyc==88){
        if (global.shakescreen&lt;12)
            global.shakescreen=10;
        if (!global.nosound){
            sound_stop(snd_enemyfire3);
            sound_play(snd_enemyfire3);
            }
        scr_explo2();
        }
    if (despcyc&gt;=80){
        despfire+=1;
        if (despfire==8-despfiremod*4 || despfire==16-despfiremod*8){
            if (despfire==16-despfiremod*8){
                despfire=0;
                tempid=instance_create(x,y+12,obj_enemybullet2);
                tempid.speed=2;
                tempid.direction=despdir2;
                tempid=instance_create(x,y+12,obj_enemybullet2);
                tempid.speed=2;
                tempid.direction=despdir2+180;
                if (!global.nosound){
                    sound_stop(snd_enemyfire1);
                    sound_play(snd_enemyfire1);
                    sound_stop(snd_enemyfire3);
                    sound_play(snd_enemyfire3);
                    }
                }
            tempid=(instance_create(x,y+12,obj_enemybullet4));
            tempid.direction=despdir;
            tempid.speed=4;
            tempid.nobosshit=1;
            tempid=(instance_create(x,y+12,obj_enemybullet4));
            tempid.direction=despdir+180;
            tempid.speed=4;
            tempid.nobosshit=1;
            despdir+=8;
            if (despdir&gt;=360)
                despdir-=360;
            despdir2+=20;
            if (despdir2&gt;=360)
                despdir2-=360;
            //Dampen shaking
            global.shakescreen=2;
            with (obj_bullet4part)
                instance_destroy();
            }
        }
    }
//ORDERS SIR
else if (!desperation){
    if (startwait&lt;80 &amp;&amp; hp&gt;0){
        startwait+=1;
        if (startwait==32){
            if (!global.nosound)
                sound_play(snd_movewhoosh);
            image_single=1;
            }
        if (startwait==33){
            image_single=2;
            alarm[0]=2;
            }
        if (startwait==40){
            if (!global.nosound){
                sound_stop(snd_catstrike);
                sound_play(snd_catstrike);
                }
            with (obj_s_atomicturret)
                (instance_create(x-8,y-8,obj_atomicturret)).off=off;
            }
        if (startwait==78){
            image_single=1;
            if (!global.nosound)
                sound_play(snd_movewhoosh);
            }
        if (startwait==79)
            image_single=0;
        if (startwait==80){
            obj_sabot.bosspresent=1;
            }
        }
    
    //Wait while surrounded by barrier and turrets
    else if (pattern==0 &amp;&amp; hp&gt;0){
        firecyc+=1;
        if (firecyc==100){
            firecyc=0;
            if (global.difficulty&gt;2){
                iter=(global.difficulty-2)*3;
                if (iter&lt;=0)
                    iter=1;
                if (iter&gt;=15)
                    iter=15;
                for (i=0;i&lt;iter;i+=1){
                    if (!global.nosound){
                        sound_stop(snd_enemyfire2);
                        sound_play(snd_enemyfire2);
                        }
                    tempid=instance_create(x+cos(degtorad((i*360/iter)+90))*20,y+14-sin(degtorad((i*360/iter)+90))*10,obj_enemybullet);
                    tempid.direction=(i*360/iter)+90;
                    tempid.speed=0.3;
                    tempid.gravity=0.05;
                    tempid.gravity_direction=tempid.direction;
                    }
                }
            }
        if (instance_number(obj_atomicturret)==0 &amp;&amp; instance_number(obj_megaturret)==0){
            pattern=1;
            firecyc=-80;
            firecyc2=-80;
            punchnum=0;
            if (global.shakescreen&lt;8)
                global.shakescreen+=6;
            scr_explo2();
            with (obj_atomicbulb){
                instance_destroy();
                instance_create(x,y,obj_elfexplo);
                }
            }
        }
    
    //Rocket punches
    else if (pattern==1 &amp;&amp; hp&gt;0){
        firecyc+=1;
        firecyc2+=1;
        if (firecyc==19){
            if (!global.nosound)
                sound_play(snd_movewhoosh);
            image_single=1;
            }
        if (firecyc==20)
            image_single=2;
        if (firecyc==40){
            drawpunch=0;
            if (hp&gt;0){
                if (!global.nosound){
                    sound_stop(snd_enemyfire5);
                    sound_play(snd_enemyfire5);
                    }
                instance_create(x-18,y-12,obj_atomicpunch);
                (instance_create(x+17,y-12,obj_atomicpunch)).right=1;
                }
            }
        if (firecyc==49){
            drawpunch=1;
            }
        if (firecyc==50){
            drawpunch=2;
            }
        if (firecyc==59 &amp;&amp; punchnum&lt;maxpunches-1){
            punchnum+=1;
            firecyc=39;
            }
        //Go back
        if (firecyc2&gt;=240)
            if (warningcyc==0)
                warningcyc=1;
            else{
                warningcyc=0;
                warning=1-warning;
                }
        if (firecyc2==279){
            image_single=1;
            alarm[0]=1;
            if (!global.nosound)
                sound_play(snd_movewhoosh);
            }
        if (firecyc2==280){
            pattern=0;
            firecyc=0;
            firecyc2=0;
            warning=0;
            drawpunch=2;
            image_single=0;
            if (hp&gt;0){
                if (!global.nosound){
                    sound_stop(snd_catstrike);
                    sound_play(snd_catstrike);
                    }
                with (obj_s_atomicturret)
                    (instance_create(x-8,y-8,obj_atomicturret)).off=off;
                }
            }
        }
    }</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_single==2 &amp;&amp; drawpunch&gt;0){
    draw_sprite(spr_atomicpunch,1,x-18,y-(4+drawpunch*4));
    draw_sprite(spr_atomicpunch,1,x+17,y-(4+drawpunch*4));
    }
draw_sprite(sprite_index,image_single,x,y);

//Eyes
pd=point_direction(x,y,obj_pitch.x,obj_pitch.y);
if (pd&lt;22.5 || pd&gt;337.5){
    eyex=1;
    eyey=0;
    }
else if (pd&lt;67.5){
    eyex=1;
    eyey=-1;
    }
else if (pd&lt;112.5){
    eyex=0;
    eyey=-1;
    }
else if (pd&lt;157.5){
    eyex=-1;
    eyey=-1;
    }
else if (pd&lt;202.5){
    eyex=-1;
    eyey=0;
    }
else if (pd&lt;247.5){
    eyex=-1;
    eyey=1;
    }
else if (pd&lt;292.5){
    eyex=0;
    eyey=1;
    }
else{
    eyex=1;
    eyey=1;
    }
eyes=1-eyes;
if (eyes &amp;&amp; startwait&gt;=40)
    draw_sprite(spr_atomiceyes,0,x-5+eyex,y-15+eyey);
if (!eyes &amp;&amp; startwait&gt;=40)
    draw_sprite(spr_atomiceyes,0,x+3+eyex,y-15+eyey+desperation);

//Hitflash
if (hitflash&gt;0)
    draw_sprite(sprite_index,image_single+4,x,y);</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
