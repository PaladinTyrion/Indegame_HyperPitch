<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_top</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>movespeed=0.4+0.4*global.difficulty;
if (movespeed&gt;3.2)
    movespeed=3.2;
speed=movespeed;
hp=1;
points=15;
hurtpitch=1;

killtype=0;
killdir=0;
nopoints=0;
enemytype=2;
hitflash=0;
imgcyc2=0;
imgcyc=0;

invincible=0;
barrel=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//HITFLASH
if (hitflash&gt;0)
    hitflash-=1;

//DIE
if (hp&lt;=0){
    global.stats[0]+=1;
    if (!nopoints){
        global.points+=points*global.multiplier;
        if (global.showscore)
            (instance_create(x,y-4,obj_scorenumber)).points=points*global.multiplier;
        if (random(1)&lt;global.pickupchance)
            instance_create(x,y,obj_pickup);
        }
    scr_randnuke(0);
    //CANNON
    if (killtype==1){
        scr_explo1();
        instance_destroy();
        instance_create(x,y,obj_elfexplo);
        if (global.shakescreen&lt;4)
            global.shakescreen+=2;
        if (!nopoints){
            repeat(2){
                tempid=instance_create(x,y,obj_elfgib);
                tempid.sprite_index=spr_bulbgibs;
                tempid.type=type;
                tempid.direction=killdir-22.5+random(45);
                tempid.vspeed*=0.85;
                }
            }
        }
    //ICE
    else if (killtype==2){
        instance_destroy();
        if (global.shakescreen&lt;4)
            global.shakescreen+=2;
        instance_create(x,y,obj_iceflash);
        repeat(5){
            tempid=instance_create(x,y,obj_icegib);
            tempid.direction=killdir-45+random(90);
            }
        for (i=0;i&lt;4;i+=1){
            tempid=instance_create(x,y,obj_icepuff);
                tempid.direction=i*90+45;
                tempid.speed=7;
            }
        if (megaice || random(1)&lt;0.1){   //Power ice
            scr_icekillbig();
            scr_megaicefx(0);
            repeat(2){
                tempid=instance_create(x,y,obj_elfgib);
                tempid.sprite_index=spr_bulbgibs;
                tempid.type=4;
                tempid.direction=random(360);
                tempid.speed=0.3+random(0.8);
                tempid.vspeed*=0.85;
                tempid.zspeed=random(5)+3;
                }
            }
        else
            scr_icekill();
        }
    //LASER
    else if (killtype==3){
        scr_rainbowkill();
        instance_destroy();
        global.flash=1;
        if (global.bake[4]==0){
            if (type==0)
                scr_lxkill(spr_lx_top1v,spr_lx_top1h,13);
            else if (type==1)
                scr_lxkill(spr_lx_top2v,spr_lx_top2h,13);
            else if (type==2)
                scr_lxkill(spr_lx_top3v,spr_lx_top3h,13);
            else if (type==3)
                scr_lxkill(spr_lx_top4v,spr_lx_top4h,13);
            else if (type==4)
                scr_lxkill(spr_lx_top5v,spr_lx_top5h,13);
            else if (type==5)
                scr_lxkill(spr_lx_top6v,spr_lx_top6h,13);
            else if (type==6)
                scr_lxkill(spr_lx_top7v,spr_lx_top7h,13);
            }
        else{
            for (i=0;i&lt;7;i+=1){
                tempid=instance_create(x,y,obj_laserexplo);
                tempid.img4=i;
                tempid.speed=(-6+i*2)*3;
                tempid.direction=killdir+90;
                tempid.image_single=tempid.img4*9;
                if (hyperlaser){
                    tempid.sprite_index=spr_hyperlaserexplo;
                    tempid.image_single=0;
                    }
                }
            }
        }
    //NUKE
    if (killtype==4){
        instance_destroy();
        instance_create(x,y,obj_elfexplo);
        if (global.shakescreen&lt;4)
            global.shakescreen+=2;
        repeat(2){
            tempid=instance_create(x,y,obj_elfgib);
            tempid.sprite_index=spr_bulbgibs;
            tempid.type=type;
            tempid.direction=random(360);
            tempid.speed=0.1+random(1.8);
            tempid.vspeed*=0.85;
            tempid.zspeed=random(6)+3;
            }
        }
    }

//MOVE
depth=320-y+obj_sabot.y;


//ANIMATE
if (speed&gt;movespeed)
    speed=movespeed;
imgcyc2+=1;
if (imgcyc2==2){
    imgcyc2=0;
    imgcyc+=1;
    }
     if (imgcyc==1) img=0;
else if (imgcyc==2) img=1;
else if (imgcyc==3){ img=2; imgcyc=0;}
image_single=type+img*7;

if (x&lt;obj_sabot.x-8 || x&gt;obj_sabot.x+328 || y&lt;obj_sabot.y-8 || y&gt;obj_sabot.y+248)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.barrel)
    hp=0;

//move_contact_solid(direction,speed);
move_bounce_solid(0);
direction=round(direction/45)*45;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_single,x,y);
if (hitflash&gt;0)
    draw_sprite(sprite_index,21+img,x,y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
