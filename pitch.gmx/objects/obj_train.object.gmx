<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_train</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2000</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>movespeed=1;
hp=6;
points=20;
type=0;
engine=0;
image_single=0;
hurtpitch=1;

invincible=0;

alarm[0]=1;
firemax=floor((6-(global.difficulty/2))*30);
if (firemax&lt;60)
    firemax=60;
fire=firemax;
bulletspeed=1.2+global.difficulty*0.3;
if (bulletspeed&gt;3)
    bulletspeed=3;
fire=30;

killtype=0;
killdir=0;
nopoints=0;
enemytype=5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (type==3)
    firemax*=2;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//HITFLASH
if (hitflash&gt;0)
    hitflash-=1;

//SMOKE
if (engine &amp;&amp; !nosmoking){
    smoke+=1;
    if (smoke==10){
        smoke=0;
        if (dir==0)
            instance_create(x+4,y-4,obj_smoke);
        else if (dir==1)
            instance_create(x-1,y-8,obj_smoke);
        else if (dir==2)
            instance_create(x-8,y-4,obj_smoke);
        else if (dir==3)
            instance_create(x-1,y,obj_smoke);
        }
    }

//DIE
if (hp&lt;=0){
    global.stats[0]+=1;
    if (!nopoints){
        global.points+=points*global.multiplier;
        if (global.showscore)
            (instance_create(x,y-4,obj_scorenumber)).points=points*global.multiplier;
        if (random(1)&lt;global.pickupchance)
            instance_create(x,y,obj_pickup);
        }
    if (engine &amp;&amp; killtype==3 &amp;&amp; global.bake[4]==0)
        scr_randnuke(1);
    else
        scr_randnuke(0);
    //CANNON
    if (killtype==1){
        scr_explo1();
        instance_destroy();
        instance_create(x,y,obj_elfexplo);
        if (global.shakescreen&lt;4)
            global.shakescreen+=2;
        if (!nopoints){
            repeat(3){
                tempid=instance_create(x,y,obj_elfgib);
                tempid.sprite_index=spr_bulbgibs;
                if (type==0) tempid.type=3;
                else if (type==1) tempid.type=4;
                else if (type==2)tempid.type=0;
                else tempid.type=2;
                tempid.direction=killdir-22.5+random(45);
                tempid.vspeed*=0.85;
                }
            }
        }
    //ICE
    else if (killtype==2){
        instance_destroy();
        if (global.shakescreen&lt;4)
            global.shakescreen+=2;
        instance_create(x,y,obj_iceflash);
        repeat(8){
            tempid=instance_create(x,y,obj_icegib);
            tempid.direction=killdir-45+random(90);
            }
        for (i=0;i&lt;4;i+=1){
            tempid=instance_create(x,y,obj_icepuff);
                tempid.direction=i*90+45;
                tempid.speed=7;
            }
        if (megaice || random(1)&lt;0.1){   //Power ice
            scr_icekillbig();
            scr_megaicefx(0);
            repeat(3){
                tempid=instance_create(x,y,obj_elfgib);
                tempid.sprite_index=spr_bulbgibs;
                tempid.type=4;
                tempid.direction=random(360);
                tempid.speed=0.3+random(0.8);
                tempid.vspeed*=0.85;
                tempid.zspeed=random(5)+3;
                }
            }
        else
            scr_icekill();
        }
    //LASER
    else if (killtype==3){
        scr_rainbowkill();
        instance_destroy();
        global.flash=1;
        if (global.bake[4]==0){
            if (type==0){
                if (dir==0 || dir==2)
                    scr_lxkill(spr_lx_train11v,spr_lx_train11h,17);
                else
                    scr_lxkill(spr_lx_train12v,spr_lx_train12h,17);
                }
            else if (type==1){
                if (dir==0 || dir==2)
                    scr_lxkill(spr_lx_train21v,spr_lx_train21h,17);
                else
                    scr_lxkill(spr_lx_train22v,spr_lx_train22h,17);
                }
            else if (type==2){
                if (dir==0 || dir==2)
                    scr_lxkill(spr_lx_train31v,spr_lx_train31h,17);
                else
                    scr_lxkill(spr_lx_train32v,spr_lx_train32h,17);
                }
            else if (type==3){
                if (dir==0 || dir==2)
                    scr_lxkill(spr_lx_train41v,spr_lx_train41h,17);
                else
                    scr_lxkill(spr_lx_train42v,spr_lx_train42h,17);
                }
            }
        else{
            for (i=0;i&lt;7;i+=1){
                tempid=instance_create(x,y,obj_laserexplo);
                tempid.img4=i;
                tempid.speed=(-6+i*2)*3;
                tempid.direction=killdir+90;
                tempid.image_single=tempid.img4*9;
                if (hyperlaser){
                    tempid.sprite_index=spr_hyperlaserexplo;
                    tempid.image_single=0;
                    }
                }
            }
        }
    //NUKE
    if (killtype==4){
        instance_destroy();
        instance_create(x,y,obj_elfexplo);
        if (global.shakescreen&lt;4)
            global.shakescreen+=2;
        repeat(3){
            tempid=instance_create(x,y,obj_elfgib);
            tempid.sprite_index=spr_bulbgibs;
            if (type==0) tempid.type=3;
            else if (type==1) tempid.type=4;
            else if (type==2)tempid.type=0;
            else tempid.type=2;
            tempid.direction=random(360);
            tempid.speed=0.1+random(1.8);
            tempid.vspeed*=0.85;
            tempid.zspeed=random(6)+3;
            }
        }
    }

//FIRE
if (!engine &amp;&amp; mayfire){
    fire-=1;
         if (fire==12) fireimg=1;
    else if (fire==10) fireimg=2;
    else if (fire==8) fireimg=3;
    else if (fire==6) fireimg=4;
    else if (fire==4) fireimg=5;
    else if (fire==2) fireimg=6;
    if (fire&lt;=0){
        fireimg=0;
        fire=firemax;
        if (type==1){
            if (!global.nosound){
                sound_stop(snd_enemyfire1);
                sound_play(snd_enemyfire1);
                }
            tempid=instance_create(x-1,y-1,obj_enemybullet2);
            tempid.direction=point_direction(x-1,y-1,obj_pitch.x,obj_pitch.y)-30+random(60);
            tempid.speed=bulletspeed;
            }
        else if (type==2){
            if (!global.nosound){
                sound_stop(snd_enemyfire1);
                sound_play(snd_enemyfire1);
                }
            tempid=instance_create(x-1,y-1,obj_enemybullet);
            tempid.direction=point_direction(x-1,y-1,obj_pitch.x,obj_pitch.y)-15+random(30);
            tempid.speed=bulletspeed;
            }
        else if (type==3){
            if (!global.nosound){
                sound_stop(snd_enemyfire1);
                sound_play(snd_enemyfire1);
                }
            tempid=instance_create(x-1,y-1,obj_enemybullet3);
            tempid.direction=point_direction(x-1,y-1,obj_pitch.x,obj_pitch.y);
            }
        }
    }

//MOVE
if (!place_free(x,y))
    depth=2318-y+obj_sabot.y;
else
    depth=318-y+obj_sabot.y;
if (x&lt;obj_sabot.x-8 || x&gt;obj_sabot.x+328 || y&lt;obj_sabot.y-8 || y&gt;obj_sabot.y+248)
    instance_destroy();
if (dir==0)
    x+=movespeed;
else if (dir==1)
    y-=movespeed;
else if (dir==2)
    x-=movespeed;
else if (dir==3)
    y+=movespeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_gotrain">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (floor(x/16)==floor(other.x/16) &amp;&amp; floor(y/16)==floor(other.y/16)){
    if (x mod 16 == 8 &amp;&amp; y mod 16 == 0){
        if ((other.dir==0 &amp;&amp; dir==2) || (other.dir==1 &amp;&amp; dir==3) || (other.dir==2 &amp;&amp; dir==0) || (other.dir==3 &amp;&amp; dir==1))
            instance_destroy();
        else{
            dir=other.dir;
            if (engine)
                image_single=type*6+dir+2;
            else
                image_single=type*6+dir mod 2;
            }
        }
    }</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_hidetrain">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>nosmoking=1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_single,x,y);
if (!engine &amp;&amp; type&gt;0 &amp;&amp; mayfire){
pd=point_direction(x,y,obj_pitch.x,obj_pitch.y);
if (pd&gt;11.25 &amp;&amp; pd&lt;348.75) gunimg=((pd)/22.5);
else gunimg=0;
draw_sprite(spr_sleighgun,gunimg,x-1,y-1);
if (fireimg&gt;0)
    draw_sprite(spr_enemyfire,fireimg-1,x-1,y-1);
}
if (hitflash&gt;0){
    draw_sprite(sprite_index,(image_single mod 6)+24,x,y);
    if (!engine &amp;&amp; type&gt;0 &amp;&amp; mayfire)
        draw_sprite(spr_sleighgun,gunimg+16,x-1,y-1);
    }</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
