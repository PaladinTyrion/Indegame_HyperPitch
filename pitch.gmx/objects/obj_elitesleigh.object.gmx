<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_elitesleigh</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_sleigh</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed=0.9+global.difficulty*0.05;
hp=16;
points=250;
hurtpitch=2;
barrel=0;

firemax=floor((7-(global.difficulty/1.8))*20);
if (firemax&lt;40)
    firemax=40;
fire=firemax;
bulletspeed=1.2+global.difficulty*0.35;
if (bulletspeed&gt;6)
    bulletspeed=6;

killtype=0;
killdir=0;
nopoints=0;
enemytype=10;

pd1=point_direction(x,y,obj_pitch.x,obj_pitch.y);
pd2=scr_leadshot(x+6-(dir*12),y,bulletspeed,1,45);
if (pd2==-1)
    pd2=pd1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//HITFLASH
if (hitflash&gt;0)
    hitflash-=1;

//DIE
if (hp&lt;=0){
    global.stats[0]+=1;
    if (!nopoints){
        global.points+=points*global.multiplier;
        if (global.showscore)
            (instance_create(x,y-4,obj_scorenumber)).points=points*global.multiplier;
        if (random(1)&lt;global.pickupchance)
            instance_create(x,y+6,obj_pickup);
        }
    scr_randnuke(0);
    //CANNON
    if (killtype==1){
        scr_explo2();
        instance_destroy();
        instance_create(x,y-10,obj_bigexplo);
        if (global.shakescreen&lt;8)
            global.shakescreen+=6;
        if (!nopoints){
            tempid=instance_create(x,y,obj_elfgib);
            tempid.type=floor(random(3));
            tempid.direction=killdir-22.5+random(45);
            tempid.vspeed*=0.85;
            repeat(3){
                tempid=instance_create(x,y,obj_elfgib);
                tempid.type=7;
                tempid.direction=killdir-22.5+random(45);
                tempid.vspeed*=0.85;
                }
            }
        }
    //ICE
    else if (killtype==2){
        instance_destroy();
        if (global.shakescreen&lt;8)
            global.shakescreen+=6;
        instance_create(x,y,obj_iceflash);
        repeat(8){
            tempid=instance_create(x,y,obj_icegib);
            tempid.direction=killdir-45+random(90);
            }
        for (i=0;i&lt;4;i+=1){
            tempid=instance_create(x,y,obj_icepuff);
                tempid.direction=i*90+45;
                tempid.speed=7;
            }
        if (megaice || random(1)&lt;0.1){   //Power ice
            scr_icekillbig();
            scr_megaicefx(0);
            tempid=instance_create(x,y,obj_elfgib);
            tempid.type=floor(random(3))+8;
            tempid.direction=random(360);
            tempid.speed=0.3+random(0.8);
            tempid.vspeed*=0.85;
            tempid.zspeed=random(5)+3;
            repeat(3){
                tempid=instance_create(x,y,obj_elfgib);
                tempid.type=15;
                tempid.direction=random(360);
                tempid.speed=0.3+random(0.8);
                tempid.vspeed*=0.85;
                tempid.zspeed=random(5)+3;
                }
            }
        else
            scr_icekill();
        }
    //LASER
    else if (killtype==3){
        scr_rainbowkill();
        instance_destroy();
        global.flash=1;
        if (global.bake[4]==0){
            if (dir==0)
                scr_lxkill(spr_lx_elitesleigh1v,spr_lx_elitesleigh1h,33);
            else
                scr_lxkill(spr_lx_elitesleigh2v,spr_lx_elitesleigh2h,33);
            }
        else{
            for (i=0;i&lt;7;i+=1){
                tempid=instance_create(x,y,obj_laserexplo);
                tempid.img4=i;
                tempid.speed=(-6+i*2)*3;
                tempid.direction=killdir+90;
                tempid.image_single=tempid.img4*9;
                if (hyperlaser){
                    tempid.sprite_index=spr_hyperlaserexplo;
                    tempid.image_single=0;
                    }
                }
            }
        }
    //NUKE
    if (killtype==4){
        instance_destroy();
        instance_create(x,y-10,obj_bigexplo);
        if (global.shakescreen&lt;8)
            global.shakescreen+=6;
        tempid=instance_create(x,y,obj_elfgib);
        tempid.type=floor(random(3));
        tempid.direction=random(360);
        tempid.speed=0.1+random(1.8);
        tempid.vspeed*=0.85;
        tempid.zspeed=random(6)+3;
        repeat(3){
            tempid=instance_create(x,y,obj_elfgib);
            tempid.type=7;
            tempid.direction=random(360);
            tempid.speed=0.1+random(1.8);
            tempid.vspeed*=0.85;
            tempid.zspeed=random(6)+3;
            }
        }
    }

//MOVE
depth=312-y+obj_sabot.y;
if (x&lt;obj_sabot.x-64 || x&gt;obj_sabot.x+384 || y&lt;obj_sabot.y-64 || y&gt;obj_sabot.y+304)
    instance_destroy();

//FIRE
if (global.difficulty&gt;2)
    fire-=1;
if (fire==12) fireimg=1;
else if (fire==10) fireimg=2;
else if (fire==8) fireimg=3;
else if (fire==6) fireimg=4;
else if (fire==4) fireimg=5;
else if (fire==2) fireimg=6;
if (fire&lt;=0){
    if (!global.nosound){
        sound_stop(snd_enemyfire2);
        sound_play(snd_enemyfire2);
        }
    fireimg=0;
    fire=firemax;
    //uno
    tempid=instance_create(x+6-(dir*12),y,obj_enemybullet);
    firetype=1-firetype;
    pd1=point_direction(x,y,obj_pitch.x,obj_pitch.y)-10+random(20);
    pd2=scr_leadshot(x+6-(dir*12),y,bulletspeed,1,45);
    if (pd2==-1)
        pd2=pd1;
    tempid.direction=pd2;
    tempid.speed=bulletspeed;
    //dos
    tempid=instance_create(x+6-(dir*12),y,obj_enemybullet);
    firetype=1-firetype;
    tempid.direction=pd2-30;
    tempid.speed=bulletspeed;
    //tres
    tempid=instance_create(x+6-(dir*12),y,obj_enemybullet);
    firetype=1-firetype;
    tempid.direction=pd2+30;
    tempid.speed=bulletspeed;
    }

//ANIMATE
if (img==0)
    img=1;
else{
    img=0;
    img2+=1;
    }
if (img2&gt;=4)
    img2=0;
image_single=img2+dir*4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_single,x,y);
/*pdtemp=point_direction(x,y,obj_pitch.x,obj_pitch.y);
if (pdtemp&gt;11.25 &amp;&amp; pd2&lt;348.75)
    gunimg=((pdtemp)/22.5);
else
    gunimg=0;
*/
if (pd2&gt;11.25 &amp;&amp; pd2&lt;348.75)
    gunimg=((pd2)/22.5);
else
    gunimg=0;
draw_sprite(spr_sleighgun,gunimg,x+6-(dir*12),y);
if (fireimg&gt;0)
    draw_sprite(spr_enemyfire,fireimg-1,x+7-(dir*12),y+1);
if (hitflash&gt;0){
    draw_sprite(sprite_index,8+dir,x,y);
    draw_sprite(spr_sleighgun,gunimg+16,x+6-(dir*12),y);
    }</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
