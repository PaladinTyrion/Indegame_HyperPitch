<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_crawler</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>movespeed=1;
hp=16;
points=150;
image_single=0;
hurtpitch=2;

firemax=floor((6-(global.difficulty/1.5))*20);
if (firemax&lt;40)
    firemax=40;
fire=firemax;
bulletspeed=1.0+global.difficulty*0.3;
if (bulletspeed&gt;6)
    bulletspeed=6;

animcyc=4;
animcyc2=3;
animcyc3=0;

delay=0;
killtype=0;
killdir=0;
nopoints=0;
enemytype=7;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//HITFLASH
if (hitflash&gt;0)
    hitflash-=1;

//DIE
if (hp&lt;=0){
    global.stats[0]+=1;
    if (!nopoints){
        global.points+=points*global.multiplier;
        if (global.showscore)
            (instance_create(x,y-4,obj_scorenumber)).points=points*global.multiplier;
        if (random(1)&lt;global.pickupchance)
            instance_create(x,y,obj_pickup);
        }
    scr_randnuke(0);
    //CANNON
    if (killtype==1){
        scr_explo2();
        instance_destroy();
        instance_create(x,y-4,obj_bigexplo);
        if (global.shakescreen&lt;4)
            global.shakescreen+=2;
        if (!nopoints){
            repeat(2){
                tempid=instance_create(x,y,obj_elfgib);
                tempid.sprite_index=spr_bulbgibs;
                tempid.type=1;
                tempid.direction=killdir-22.5+random(45);
                tempid.vspeed*=0.85;
                tempid=instance_create(x,y,obj_elfgib);
                tempid.type=7;
                tempid.direction=killdir-22.5+random(45);
                tempid.vspeed*=0.85;
                }
            }
        }
    //ICE
    else if (killtype==2){
        instance_destroy();
        if (global.shakescreen&lt;4)
            global.shakescreen+=2;
        instance_create(x,y,obj_iceflash);
        repeat(8){
            tempid=instance_create(x,y,obj_icegib);
            tempid.direction=killdir-45+random(90);
            }
        for (i=0;i&lt;4;i+=1){
            tempid=instance_create(x,y,obj_icepuff);
                tempid.direction=i*90+45;
                tempid.speed=7;
            }
        if (megaice || random(1)&lt;0.1){   //Power ice
            scr_icekillbig();
            scr_megaicefx(0);
            repeat(2){
                tempid=instance_create(x,y,obj_elfgib);
                tempid.sprite_index=spr_bulbgibs;
                tempid.type=4;
                tempid.direction=random(360);
                tempid.speed=0.3+random(0.8);
                tempid.vspeed*=0.85;
                tempid.zspeed=random(5)+3;
                tempid=instance_create(x,y,obj_elfgib);
                tempid.type=15;
                tempid.direction=random(360);
                tempid.speed=0.3+random(0.8);
                tempid.vspeed*=0.85;
                tempid.zspeed=random(5)+3;
                }
            }
        else
            scr_icekill();
        }
    //LASER
    else if (killtype==3){
        scr_rainbowkill();
        instance_destroy();
        global.flash=1;
        if (global.bake[4]==0){
            if (dir==0 || dir==2)
                scr_lxkill(spr_lx_crawler1v,spr_lx_crawler1h,15);
            else
                scr_lxkill(spr_lx_crawler2v,spr_lx_crawler2h,15);
            }
        else{
            for (i=0;i&lt;7;i+=1){
                tempid=instance_create(x,y,obj_laserexplo);
                tempid.img4=i;
                tempid.speed=(-6+i*2)*3;
                tempid.direction=killdir+90;
                tempid.image_single=tempid.img4*9;
                if (hyperlaser){
                    tempid.sprite_index=spr_hyperlaserexplo;
                    tempid.image_single=0;
                    }
                }
            }
        }
    //NUKE
    if (killtype==4){
        instance_destroy();
        instance_create(x,y-4,obj_elfexplo);
        if (global.shakescreen&lt;4)
            global.shakescreen+=2;
        repeat(2){
            tempid=instance_create(x,y,obj_elfgib);
            tempid.sprite_index=spr_bulbgibs;
            tempid.type=1;
            tempid.direction=random(360);
            tempid.speed=0.1+random(1.8);
            tempid.vspeed*=0.85;
            tempid.zspeed=random(6)+3;
            tempid=instance_create(x,y,obj_elfgib);
            tempid.type=7;
            tempid.direction=random(360);
            tempid.speed=0.1+random(1.8);
            tempid.vspeed*=0.85;
            tempid.zspeed=random(6)+3;
            }
        }
    }

//FIRE
fire-=1;
     if (fire==12) fireimg=1;
else if (fire==10) fireimg=2;
else if (fire==8) fireimg=3;
else if (fire==6) fireimg=4;
else if (fire==4) fireimg=5;
else if (fire==2) fireimg=6;
if (fire&lt;=0){
    if (!global.nosound){
        sound_stop(snd_enemyfire2);
        sound_play(snd_enemyfire2);
        }
    fireimg=0;
    fire=firemax;
    tempid=instance_create(x-1,y-4,obj_enemybullet2);
    tempid.direction=point_direction(x-1,y-4,obj_pitch.x,obj_pitch.y)-5+random(10);
    tempid.speed=bulletspeed;
    tempid=instance_create(x-1,y-4,obj_enemybullet2);
    tempid.direction=point_direction(x-1,y-4,obj_pitch.x,obj_pitch.y)-5+random(10)-10;
    tempid.speed=bulletspeed-0.5;
    tempid=instance_create(x-1,y-4,obj_enemybullet2);
    tempid.direction=point_direction(x-1,y-4,obj_pitch.x,obj_pitch.y)-5+random(10)+10;
    tempid.speed=bulletspeed-0.5;
    /*
    tempid=instance_create(x-1,y-4,obj_enemybullet2);
    tempid.direction=point_direction(x-1,y-4,obj_pitch.x,obj_pitch.y)-5+random(10)-20;
    tempid.speed=bulletspeed-0.25;
    tempid=instance_create(x-1,y-4,obj_enemybullet2);
    tempid.direction=point_direction(x-1,y-4,obj_pitch.x,obj_pitch.y)-5+random(10)+20;
    tempid.speed=bulletspeed-0.25;
    */
    }

//MOVE
depth=320-y+obj_sabot.y;

if (delay&gt;0)
    delay-=1/40;
else if (!moving)
    moving=1;
if (x&lt;obj_sabot.x-8 || x&gt;obj_sabot.x+328 || y&lt;obj_sabot.y-8 || y&gt;obj_sabot.y+248)
    instance_destroy();
//TURN
fac=4;
if (moving){
    if (clock==0){
        if (dir==0){
            x+=movespeed;
            if (!place_free(x+fac,y))
                dir=3;
            else if (place_free(x-fac,y-fac) &amp;&amp; !place_free(xprevious-fac,y-fac)){
                dir=1;
                x-=movespeed;
                }
            }
        else if (dir==1){
            y-=movespeed;
            if (!place_free(x,y-fac))
                dir=0;
            else if (place_free(x-fac,y+fac) &amp;&amp; !place_free(x-fac,yprevious+fac)){
                dir=2;
                y+=movespeed;
                }
            }
        else if (dir==2){
            x-=movespeed;
            if (!place_free(x-fac,y))
                dir=1;
            else if (place_free(x+fac,y+fac) &amp;&amp; !place_free(xprevious+fac,y+fac)){
                dir=3;
                x+=movespeed;
                }
            }
        else if (dir==3){
            y+=movespeed;
            if (!place_free(x,y+fac))
                dir=2;
            else if (place_free(x+fac,y-fac) &amp;&amp; !place_free(x+fac,yprevious-fac)){
                dir=0;
                y-=movespeed;
                }
            }
        }
    else if (clock==1){
        if (dir==0){
            x+=movespeed;
            if (!place_free(x+fac,y))
                dir=1;
            else if (place_free(x-fac,y+fac) &amp;&amp; !place_free(xprevious-fac,y+fac)){
                dir=3;
                x-=movespeed;
                }
            }
        else if (dir==1){
            y-=movespeed;
            if (!place_free(x,y-fac))
                dir=2;
            else if (place_free(x+fac,y+fac) &amp;&amp; !place_free(x+fac,yprevious+fac)){
                dir=0;
                y+=movespeed;
                }
            }
        else if (dir==2){
            x-=movespeed;
            if (!place_free(x-fac,y))
                dir=3;
            else if (place_free(x+fac,y-fac) &amp;&amp; !place_free(xprevious+fac,y-fac)){
                dir=1;
                x+=movespeed;
                }
            }
        else if (dir==3){
            y+=movespeed;
            if (!place_free(x,y+fac))
                dir=0;
            else if (place_free(x-fac,y-fac) &amp;&amp; !place_free(x-fac,yprevious-fac)){
                dir=2;
                y-=movespeed;
                }
            }
        }
    }

//ANIM
if (animcyc4==0)
    animcyc4=1;
else if (moving){
    animcyc4=0;
    //front/back
    animcyc+=1;
    if (animcyc==6)
        animcyc=4;
    //right
    animcyc2-=1;
    if (animcyc2==-1)
        animcyc2=3;
    //left
    animcyc3+=1;
    if (animcyc3==4)
        animcyc3=0;
    //anim
    if (dir==0)
        image_single=animcyc2;
    else if (dir==2)
        image_single=animcyc3;
    else
        image_single=animcyc;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_single,x,y);
pd=point_direction(x-1,y-4,obj_pitch.x,obj_pitch.y);
if (pd&gt;11.25 &amp;&amp; pd&lt;348.75) gunimg=((pd)/22.5);
else gunimg=0;
draw_sprite(spr_sleighgun,gunimg,x-1,y-4);
if (fireimg&gt;0)
    draw_sprite(spr_enemyfire,fireimg-1,x-1,y-4);
if (hitflash&gt;0){
    if (dir==0 || dir==2)
        draw_sprite(sprite_index,6,x,y);
    else
        draw_sprite(sprite_index,7,x,y);
    draw_sprite(spr_sleighgun,gunimg+16,x-1,y-4);
    }</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
